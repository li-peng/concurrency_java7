2 synchronized关键字 demo1
3 synchronized关键字 :同一个对象，两个锁控制两个属性的访问。-- demo2
4 在同步代码块中使用条件：wait,notify等关键字，必须在同步代码块中使用，否则会抛出异常。例如：缓存区是满的，生产者就不能再放入数据。
    当一个线程调用wait方法时，JVM将这个线程休眠，并且释放控制这个同步代码块的对象锁，同时允许其他线程执行这个对象控制的其他同步代码块。为了唤醒这个线程，必须在这个对象控制的某个
    某个代码块中调用notify或者notifyAll方法。 demo3和demo4
5 Lock锁，实现类ReentrantLock(重入锁) demo5
     Lock锁相比synchronized代码块的优点 ：
     5.1 Lock性能更好。
     5.2 Lock更加灵活，可以更精确的控制细粒度，可以支持读写分离，允许多个读线程和只有一个写线程。
     5.3 死锁的一种情况：线程A获取了锁X，线程B获取了锁Y，现在，线程A视图获取锁Y，同时线程B试图获取锁X，则两个线程都将被阻塞，且他们等待的
     锁永远不会被释放，造成死锁。
6 读写锁ReadWriteLock以及实现类ReentrantReadWriteLock,使用读操作锁时可以允许多个线程同时访问，但是使用写操作锁时只允许一个线程进行。在一个线程执行线程时，其他线程不能
     够执行读或写操作。


